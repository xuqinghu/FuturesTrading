// automatically generated by the FlatBuffers compiler, do not modify

package com.netty.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;

@SuppressWarnings("unused")
public final class FbKLineData extends Table {
  public static FbKLineData getRootAsFbKLineData(ByteBuffer _bb) { return getRootAsFbKLineData(_bb, new FbKLineData()); }
  public static FbKLineData getRootAsFbKLineData(ByteBuffer _bb, FbKLineData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FbKLineData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String ContractNo() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ContractNoAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer ContractNoInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public int Date() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int Time() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float openPrice() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float highPrice() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float lowerPrice() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float closePrice() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long vol() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String lineType() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lineTypeAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer lineTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }

  public static int createFbKLineData(FlatBufferBuilder builder,
      int ContractNoOffset,
      int Date,
      int Time,
      float openPrice,
      float highPrice,
      float lowerPrice,
      float closePrice,
      long vol,
      int lineTypeOffset) {
    builder.startObject(9);
    FbKLineData.addVol(builder, vol);
    FbKLineData.addLineType(builder, lineTypeOffset);
    FbKLineData.addClosePrice(builder, closePrice);
    FbKLineData.addLowerPrice(builder, lowerPrice);
    FbKLineData.addHighPrice(builder, highPrice);
    FbKLineData.addOpenPrice(builder, openPrice);
    FbKLineData.addTime(builder, Time);
    FbKLineData.addDate(builder, Date);
    FbKLineData.addContractNo(builder, ContractNoOffset);
    return FbKLineData.endFbKLineData(builder);
  }

  public static void startFbKLineData(FlatBufferBuilder builder) { builder.startObject(9); }
  public static void addContractNo(FlatBufferBuilder builder, int ContractNoOffset) { builder.addOffset(0, ContractNoOffset, 0); }
  public static void addDate(FlatBufferBuilder builder, int Date) { builder.addInt(1, Date, 0); }
  public static void addTime(FlatBufferBuilder builder, int Time) { builder.addInt(2, Time, 0); }
  public static void addOpenPrice(FlatBufferBuilder builder, float openPrice) { builder.addFloat(3, openPrice, 0.0f); }
  public static void addHighPrice(FlatBufferBuilder builder, float highPrice) { builder.addFloat(4, highPrice, 0.0f); }
  public static void addLowerPrice(FlatBufferBuilder builder, float lowerPrice) { builder.addFloat(5, lowerPrice, 0.0f); }
  public static void addClosePrice(FlatBufferBuilder builder, float closePrice) { builder.addFloat(6, closePrice, 0.0f); }
  public static void addVol(FlatBufferBuilder builder, long vol) { builder.addLong(7, vol, 0L); }
  public static void addLineType(FlatBufferBuilder builder, int lineTypeOffset) { builder.addOffset(8, lineTypeOffset, 0); }
  public static int endFbKLineData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

